'use strict';exports.__esModule=true;var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _lodash=require('lodash.uniqueid');var _lodash2=_interopRequireDefault(_lodash);var _utils=require('../utils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var prefix='slds-badge';var Badge=function(_Component){_inherits(Badge,_Component);function Badge(){_classCallCheck(this,Badge);return _possibleConstructorReturn(this,_Component.apply(this,arguments))}Badge.prototype.render=function render(){var props=this.props;var label=props.label;var className=(0,_utils.createClassName)(prefix,props.className,(0,_utils.generalClassNames)(props),props.inverse?prefix+'_inverse':'');if(label!=null){return _react2.default.createElement('span',{className:className},label)}return null};return Badge}(_react.Component);Badge.defaultProps={inverse:null};Badge.propTypes={/** Label of Button * */label:_propTypes2.default.string,inverse:_propTypes2.default.bool};exports.default=Badge;