'use strict';exports.__esModule=true;var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _enum=require('../enum');var _utils=require('../utils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var Spinner=function(_Component){_inherits(Spinner,_Component);function Spinner(){_classCallCheck(this,Spinner);return _possibleConstructorReturn(this,_Component.apply(this,arguments))}Spinner.prototype.render=function render(){var size=this.props.size;var sClassName='slds-spinner_'+this.props.size;var className=(0,_utils.createClassName)('slds-spinner',sClassName,this.props.className,(0,_utils.generalClassNames)(this.props));return _react2.default.createElement('div',{role:'status',className:className},_react2.default.createElement('span',{className:'slds-assistive-text'},'Loading'),_react2.default.createElement('div',{className:'slds-spinner__dot-a'}),_react2.default.createElement('div',{className:'slds-spinner__dot-b'}))};return Spinner}(_react.Component);var spinnerSize=[// temp
'xx-small','x-small','small','medium','large'];Spinner.sizes=spinnerSize;Spinner.defaultProps={size:'small'};Spinner.propTypes={/** set the size, default is `small` */size:_propTypes2.default.oneOf(spinnerSize).isRequired};exports.default=Spinner;