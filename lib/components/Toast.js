'use strict';exports.__esModule=true;var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _lodash=require('lodash.uniqueid');var _lodash2=_interopRequireDefault(_lodash);var _Svg=require('./Svg');var _Svg2=_interopRequireDefault(_Svg);var _utils=require('../utils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var timer=void 0;var Toast=function(_Component){_inherits(Toast,_Component);function Toast(props){_classCallCheck(this,Toast);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.onClose=_this.onClose.bind(_this);return _this}Toast.prototype.onClose=function onClose(){if(this.props.onClose){console.log('onClose');this.props.onClose()}};Toast.prototype.componentWillUnmount=function componentWillUnmount(){clearTimeout(timer)};Toast.prototype.renderInfo=function renderInfo(){if(this.props.type){return _react2.default.createElement('span',{className:'slds-assistive-text'},this.props.type)}return null};Toast.prototype.renderIcon=function renderIcon(){// add description
return _react2.default.createElement('span',{className:'slds-icon_container slds-icon-utility-info slds-m-right_small slds-no-flex slds-align-top'},_react2.default.createElement(_Svg2.default,{className:'slds-icon slds-icon_small',variant:'utility',icon:this.props.type}))};Toast.prototype.renderContent=function renderContent(){if(this.props.children){return _react2.default.createElement('div',{className:'slds-notify__content'},this.props.children)}return null};Toast.prototype.renderClose=function renderClose(){// convert to button icon component
return _react2.default.createElement('button',{className:'slds-button slds-button_icon slds-notify__close slds-button_icon-inverse',title:'Close',onClick:this.onClose},_react2.default.createElement(_Svg2.default,{className:'slds-button__icon slds-button__icon_large',variant:'utility',icon:'close'}),_react2.default.createElement('span',{className:'slds-assistive-text'},'Close'))};Toast.prototype.render=function render(){var props=this.props;var label=props.label,type=props.type,isFixed=props.isFixed,isAbsolute=props.isAbsolute,isRelative=props.isRelative,isStatic=props.isStatic,display=props.display;var className=(0,_utils.createClassName)('slds-notify_container',display?'slds-show':'slds-hide',!isFixed&&!isAbsolute&&!isStatic?'slds-is-relative':null,props.className,(0,_utils.generalClassNames)(props));var alertClass='slds-notify slds-notify_toast slds-theme_'+type;return _react2.default.createElement('div',{className:className},_react2.default.createElement('div',{className:alertClass,role:'alert'},this.renderInfo(),this.renderIcon(),this.renderContent(),this.renderClose()))};Toast.prototype.componentDidMount=function componentDidMount(){if(this.props.autoClose!==null){var dis=this;timer=setTimeout(function(){console.log(this);console.log(dis);dis.onClose()},dis.autoClose)}};return Toast}(_react.Component);Toast.defaultProps={display:true,type:'info',// info, warning, success, error
autoClose:null};Toast.propTypes={/**  Let the user know what type of notification it is */type:_propTypes2.default.oneOf(['info','warning','success','error']),/** Content */children:_propTypes2.default.any};exports.default=Toast;